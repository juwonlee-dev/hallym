<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hallym.club.club.dao.ClubDAO">
    
    <resultMap id="ClubVOResult" type="hallym.club.club.vo.ClubVO">
		 <result property="club_id" column="CLUB_ID" />
		 <result property="club_nm" column="CLUB_NM" />
		 <result property="club_gb_cd" column="CLUB_GB_CD" />
		 <result property="club_at_cd" column="CLUB_AT_CD" />
		 <result property="cnt" column="CLUB_CNT" />
		 <result property="club_aim" column="CLUB_AIM" />
		 <result property="club_active" column="CLUB_ACTIVE" />
		 <result property="club_room" column="CLUB_ROOM" />
		 <result property="open_dt" column="OPEN_DT" />
		 <result property="intro_cont" column="INTRO_CONT" />
		 <result property="intro_file_nm" column="INTRO_FILE_NM" />
		 <result property="intro_file_path" column="INTRO_FILE_PATH" />
		 <result property="intro_save_file_nm" column="INTRO_SAVE_FILE_NM" />
		 <result property="poster_file_nm" column="POSTER_FILE_NM" />
		 <result property="poster_save_file_nm" column="POSTER_SAVE_FILE_NM" />
		 <result property="register_cd" column="REGISTER_CD" />
		 <result property="topClub_YN" column="TOPCLUB_YN" />
		 <result property="topClub_rank" column="TOPCLUB_RANK" />
		 <result property="gb_nm" column="GB_NM"/>
		 <result property="at_nm" column="AT_NM"/>
		 <result property="year" column="YEAR"/>
		 <result property="rank" column="RANK"/>
	</resultMap>
	
    <select id="getClub" parameterType="map" resultMap="ClubVOResult">
        SELECT 
        	*
        FROM
        	CLUB
        WHERE
        	CLUB_ID = #{club_id}
    </select>
    
    <select id="getRegisterClub" parameterType="map" resultMap="ClubVOResult">
        SELECT 
        	*
        FROM
        	CLUB
        WHERE
        	REGISTER_CD = #{register_cd}
        
    </select>
    
	<select id="getClubName" parameterType="map" resultType="string">
	    SELECT
	    	club_nm
	    FROM
	    	club
	    WHERE
	    	club_nm=#{club_nm}
	</select>
	
		
	<select id="getWaitRegisterClub" parameterType="map" resultMap="ClubVOResult">
		SELECT 
			C.* 
		FROM 
			CLUB C, CLUB_MEMBER M
		WHERE 
			C.CLUB_ID = M.CLUB_ID AND
			M.STAFF_CD = '004001' AND 
			M.STUDENT_ID = #{id} AND 
			C.REGISTER_CD = #{register_cd}

	</select>
	   	<select id="getWaitJoinClub" parameterType="map" resultMap="ClubVOResult">
			SELECT 
				C.CLUB_NM, C.CLUB_ID 
			FROM 
				CLUB C, CLUB_MEMBER M 
			WHERE 
				C.CLUB_ID= M.CLUB_ID AND 
				M.STUDENT_ID = #{id} AND 
				M.JOIN_CD = #{join_cd}
   	    
   	</select>
   	
	<select id="getRegisterClubList" parameterType="map" resultMap="ClubVOResult">
		SELECT
			*
		FROM
			(
			SELECT
				ROW_NUMBER() OVER
				(ORDER BY club_id ASC)
				RNUM, club.*
			FROM
				club
			WHERE
				register_cd = #{register_cd} AND
				club_gb_cd LIKE '%' || #{gb_cd} || '%'AND 
				club_at_cd LIKE '%' || #{at_cd} || '%' AND 
				club_nm LIKE '%'|| #{search} ||'%'
			)
		WHERE
			RNUM BETWEEN #{startNum} AND #{endNum} ORDER BY RNUM ASC

	</select>
	
	
	<select id="getRegisterClubListCnt" parameterType="map" resultType="int">
     	
		SELECT
			COUNT(club_id)
		FROM
			club
		WHERE
			register_cd = #{register_cd}
		 	AND club_gb_cd LIKE '%' || #{gb_cd} || '%'
			AND club_at_cd LIKE '%' || #{at_cd} || '%' 
			AND club_nm LIKE '%' || #{search} || '%'
		
    </select>
     
   	<select id="getRegisterTotalPageCnt" parameterType="map" resultType="int">

		SELECT
			distinct CEIL(
				(
					SELECT
						NVL(COUNT(club_id), 0)
						
					FROM (
						SELECT club_id
						FROM club
						where
							register_cd = #{register_cd}
							AND club_gb_cd LIKE '%' || #{gb_cd} || '%'
							AND club_at_cd LIKE '%' || #{at_cd} || '%' 
							AND club_nm LIKE '%' || #{search} || '%'
					)
				)
			/ #{limit} ) as page
		FROM
			club
         
    </select>
	
   	
	<update id="updateTopClubYN" parameterType="map">
	    UPDATE
	    	CLUB
	    SET
	    	TOPCLUB_YN = #{topclub_yn}
	    WHERE 
	    	CLUB_ID = #{club_id}
	    
	</update>
	
	<insert id="insertTopClub">
	    INSERT 
	    INTO
	    	TOPCLUB
	    		(
	    		CLUB_ID,
	    		YEAR,
	    		RANK
	    		)
	    VALUES
	    	(
	    		#{club_id},
	    		#{year},
	    		#{rank}
	    	)
	    
	</insert>
	
	<delete id="deleteTopClub" parameterType="map">
	    DELETE
	    FROM
	    	TOPCLUB
	    WHERE
	    	CLUB_ID = #{club_id} AND
	    	YEAR = #{year}
	</delete>
	
	   	
	
	<update id="updateTopClubRank" parameterType="map">
	    UPDATE
	    	TOPCLUB
	    SET
	    	RANK = #{topclub_rank}
	    WHERE 
	    	CLUB_ID = #{club_id} AND
	    	YEAR = #{year}
	</update>
	   	
	<update id="updateClub" parameterType="map">
		UPDATE 
			CLUB
		SET 
			<if test="opt1">
			CLUB_GB_CD = #{gb_cd},
			CLUB_AT_CD = #{at_cd},
			</if>
			CLUB_AIM = #{club_aim}, 
			CLUB_ACTIVE = #{club_active},
			CLUB_ROOM = #{club_room}, 
			OPEN_DT = #{open_dt} 
		WHERE
			CLUB_ID = #{club_id}
	</update>
	
	<update id="updateIntro" parameterType="map">
	    
	    UPDATE
	    	CLUB
	    SET
	    	INTRO_FILE_NM = #{intro_file_nm},
	    	INTRO_SAVE_FILE_NM = #{intro_save_file_nm}
	    WHERE
	    	CLUB_ID = #{club_id}
	    
	</update>
	<update id="updatePoster" parameterType="map">
	    
	    UPDATE
	    	CLUB
	    SET
	    	POSTER_FILE_NM = #{poster_file_nm},
	    	POSTER_SAVE_FILE_NM = #{poster_save_file_nm}
	    WHERE
	    	CLUB_ID = #{club_id}
	    
	</update>
	
	<update id="updateRegister" parameterType="map">
	    UPDATE
	    	CLUB
	    SET
	    	REGISTER_CD = #{register_cd}
	    WHERE
	    	CLUB_ID = #{club_id}
	    
	</update>
	
    <select id="getIntroClub" resultMap="ClubVOResult">
        SELECT 
        	* 
        FROM 
        	(SELECT 
        		C.CLUB_ID, 
        		C.CLUB_NM, 
        		C.INTRO_SAVE_FILE_NM, 
        		C.CLUB_AIM, 
        		C.CLUB_ACTIVE, 
        		S.SO_NM AS GB_NM, 
        		D.SO_NM AS AT_NM, 
        		C.CLUB_CNT 
			FROM 
				CLUB C, SO_CD S, SO_CD D 
			WHERE 
				C.CLUB_GB_CD = S.SO_CD AND C.CLUB_AT_CD = D.SO_CD AND C.REGISTER_CD='008001'
			 ORDER BY C.CLUB_CNT DESC) 
		<![CDATA[WHERE ROWNUM <= 6]]>
     
    </select>
    
    <select id="getIntroClubLogin" parameterType="map" resultMap="ClubVOResult">
       SELECT 
       		S.SO_NM AS GB_NM,
       		D.SO_NM AS AT_NM, 
       		T.* FROM SO_CD S, 
       		SO_CD D, 
       		(SELECT 
       			C.CLUB_ID, 
       			C.CLUB_NM, 
       			C.INTRO_SAVE_FILE_NM, 
       			C.CLUB_AIM, 
       			C.CLUB_ACTIVE, 
       			C.CLUB_GB_CD, 
       			C.CLUB_AT_CD, 
       			ZZ.STAFF 
			FROM 
				CLUB C RIGHT OUTER JOIN 
					(SELECT
					 	M.CLUB_ID, 
					 	M.STAFF_CD, 
					 	S.SO_NM AS STAFF 
					FROM 
					 	CLUB_MEMBER M, SO_CD S 
					WHERE M.STAFF_CD = S.SO_CD AND M.STUDENT_ID = #{id} AND M.JOIN_CD = '008001' ORDER BY M.STAFF_CD)ZZ 
		ON C.CLUB_ID = ZZ.CLUB_ID AND C.REGISTER_CD='008001')T 
		WHERE S.SO_CD = T.CLUB_GB_CD AND D.SO_CD = T.CLUB_AT_CD
    </select>
    
   	<select id="getClubList" parameterType="map" resultMap="ClubVOResult">
		SELECT 
			*
		FROM (
			SELECT
			 	ROW_NUMBER() 
			 	OVER(ORDER BY CLUB_NM) AS RK, 
			 	A.*, 
			 	NVL(B.NM, ' ') AS STAFF_NM, 
				NVL(B.PHONE_NO, ' ') AS STAFF_NO
			FROM CLUB A LEFT OUTER JOIN(
				SELECT 
					CLUB_ID, 
					NM , 
					PHONE_NO
				FROM 
					CLUB_MEMBER
			WHERE 
				STAFF_CD = '004001')B
			ON A.CLUB_ID = B.CLUB_ID
		<![CDATA[WHERE A.CLUB_ID <> 1]]> 
			AND A.CLUB_GB_CD LIKE '%' || #{gb_cd} || '%' 
			AND A.CLUB_NM LIKE '%' || #{search} || '%' 
			AND	A.CLUB_AT_CD LIKE '%' || #{at_cd} || '%' 
			AND A.REGISTER_CD='008001'
			ORDER BY A.CLUB_NM) 
		WHERE RK BETWEEN #{startNum} AND #{endNum}
	   	    
   	</select>

   	<select id="getClubListCnt" parameterType="map" resultType="int">
     	
		SELECT
			COUNT(club_id)
		FROM
			club
		WHERE
			register_cd = '008001'
			AND CLUB_ID > 1
			AND club_gb_cd LIKE '%' || #{gb_cd} || '%'
			AND club_at_cd LIKE '%' || #{at_cd} || '%'
			AND club_nm LIKE '%' || #{search} || '%'
		
    </select>
     
   	<select id="getTotalPageCnt" parameterType="map" resultType="int">

		SELECT
			distinct CEIL(
				(
					SELECT
						NVL(COUNT(club_id), 0)
						
					FROM (
						SELECT club_id
						FROM club
						WHERE CLUB_ID > 1
							AND register_cd = '008001'
							AND club_gb_cd LIKE '%' || #{gb_cd} || '%'
							AND club_at_cd LIKE '%' || #{at_cd} || '%'
							AND club_nm LIKE '%' || #{search} || '%'
					)
				)
			/ #{limit} ) as page
		FROM
			club
         
    </select>
   	
   	<select id="getTopClubList" parameterType="map" resultMap="ClubVOResult">
   	    <!-- SELECT *
   	    FROM club 
   	    WHERE 
   	    	club_gb_cd=#{gb_cd}
   	    	<if test="opt == 1">
   	    	AND club_at_cd ='002001' 
   	    	</if>
   	    	<if test="opt == 2">
   	    	AND club_at_cd != '002001'
   	    	</if>
   	    	AND topclub_yn='Y' 
   	    ORDER BY topclub_rank ASC -->

		SELECT
			*
		FROM
			club c, topclub t
		WHERE
			c.club_id = t.club_id and
			c.register_cd='008001' and
			c.club_gb_cd= #{gb_cd} and
			<choose>
			    <when test="opt == 1">
			        c.club_at_cd = '002001' and
			    </when>
			    <otherwise>
			        c.club_at_cd != '002001' and
			    </otherwise>
			</choose>			
			t.year = #{year}
			ORDER BY t.rank ASC
			
   	</select>
   	
   	<insert id="createClub" parameterType="map">
	INSERT INTO
		CLUB(CLUB_ID,
			 CLUB_NM,
			 CLUB_GB_CD,
			 CLUB_AT_CD,
			 CLUB_CNT,
			 CLUB_AIM,
			 CLUB_ACTIVE,
			 CLUB_ROOM,
			 OPEN_DT, 
			 INTRO_FILE_NM, 
			 INTRO_SAVE_FILE_NM, 
			 POSTER_FILE_NM,
			 POSTER_SAVE_FILE_NM, 
			 REGISTER_CD)
		VALUES
		(
			(SELECT NVL(MAX(CLUB_ID),0)+1 FROM CLUB),
			#{club_nm},
			#{club_gb_cd},
			#{club_at_cd},
			#{club_cnt},
			#{club_aim},
			#{club_active},
			#{club_room},
			#{open_dt},
			#{intro_file_nm},
			#{intro_save_file_nm},
			#{poster_file_nm},
			#{poster_save_file_nm},
			#{register_cd}
		)
   	</insert>
   	
   	<delete id="deleteClub" parameterType="map">
   	    
   	    DELETE
   	    FROM
   	    	CLUB
   	    WHERE 
   	    	CLUB_ID = #{club_id}
   	    
   	</delete>
   	
</mapper>